{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","Footer","style","color","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","Fragment","map","components_Note","key","date","Date","find","n","changedNote","objectSpread","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","toISOString","Math","random","length","value","onChange","target","type","components_Footer","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.d335c7a4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"not important\" : \"important\";\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject).then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"#000\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helskinki 2022\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport \"./index.css\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        alert(`the note ${note.content} was already deleted from server`);\n      });\n    setNotes(notes.filter((n) => n.id !== id));\n  };\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            date={new Date()}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(<App />);\n"],"sourceRoot":""}