{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","baseUrl","services_notes","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","Footer","style","color","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","res","noteService","initialNotes","notesToShow","filter","Fragment","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","target","type","components_Footer","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.0e5b16d4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"not important\" : \"important\";\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"https://frozen-cliffs-90908.herokuapp.com/api/notes\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject).then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"#000\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helskinki 2022\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport \"./index.css\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/notes\").then((res) => {\n      setNotes(res.data);\n    });\n  }, []);\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        alert(`the note ${note.content} was already deleted from server`);\n      });\n    setNotes(notes.filter((n) => n.id !== id));\n  };\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(<App />);\n"],"sourceRoot":""}